var health = 16;
	
function dropHealth(amt){
	health -= amt;
	if(health <= 0)
		gameOver = true;
}
function drawHealthBar(){
	push();
		scale(1.5);
		noStroke();
		fill(30, 30, 30);
		beginShape();
		vertex(-96.375, -62.25);
		vertex(96.375, -62.25);
		bezierVertex(103.042, -62.25, 106.375, -58.917, 106.375, -52.25);
		vertex(106.375, -30.45);
		bezierVertex(106.375, -23.783, 103.042, -20.45, 96.375, -20.45);
		vertex(-96.375, -20.45);
		vertex(-98.375, -20.55);
		bezierVertex(-103.708, -21.183, -106.375, -24.483, -106.375, -30.45);
		vertex(-106.375, -52.25);
		bezierVertex(-106.375, -58.217, -103.708, -61.517, -98.375, -62.15);
		vertex(-96.375, -62.25);
		endShape();
		if(health>=16)
			fill(96, 215, 76);
		else fill(86, 86, 86);
		beginShape();
		vertex(82.625, -43.95);
		vertex(89.425, -54.4);
		vertex(95.325, -54.4);
		vertex(78.925, -28.75);
		vertex(72.725, -28.65);
		vertex(82.625, -43.95);
		endShape();
		if(health>=15)
			fill(96, 215, 76);
		else fill(86, 86, 86);
		beginShape();
		vertex(63.625, -28.75);
		vertex(80.325, -54.45);
		vertex(86.225, -54.45);
		vertex(69.825, -28.8);
		vertex(63.625, -28.75);
		endShape();
		if(health>=14)
			fill(96, 215, 76);
		else fill(86, 86, 86);
		beginShape();
		vertex(53.575, -28.6);
		vertex(63.475, -43.85);
		vertex(70.275, -54.3);
		vertex(76.175, -54.3);
		vertex(59.775, -28.65);
		vertex(53.575, -28.6);
		endShape();
		if(health>=13)
			fill(96, 215, 76);
		else fill(86, 86, 86);
		beginShape();
		vertex(67.075, -54.4);
		vertex(50.675, -28.75);
		vertex(44.475, -28.65);
		vertex(61.175, -54.4);
		vertex(67.075, -54.4);
		endShape();
		if(health>=12)
			fill(215, 126, 76);
		else fill(86, 86, 86);
		beginShape();
		vertex(35.025, -29);
		vertex(44.925, -44.3);
		vertex(51.725, -54.7);
		vertex(51.725, -54.75);
		vertex(57.625, -54.75);
		vertex(57.625, -54.7);
		vertex(41.225, -29.1);
		vertex(35.025, -29);
		endShape();
		
		fill(68, 68, 68);
		beginShape();
		vertex(63.625, -28.75);
		vertex(69.825, -28.8);
		vertex(86.225, -54.45);
		vertex(88.425, -53.25);
		vertex(82.625, -43.95);
		vertex(72.725, -28.65);
		vertex(78.925, -28.75);
		vertex(95.325, -54.4);
		vertex(97.525, -53.15);
		vertex(80.825, -27);
		vertex(73.575, -26.9);
		vertex(72.725, -28.65);
		vertex(71.725, -27.1);
		vertex(64.475, -27);
		vertex(63.625, -28.75);
		endShape();
		beginShape();
		vertex(-59.675, -29.15);
		vertex(-60.675, -27.6);
		vertex(-67.925, -27.5);
		vertex(-68.775, -29.2);
		vertex(-62.575, -29.3);
		vertex(-46.175, -54.95);
		vertex(-43.975, -53.7);
		vertex(-48.275, -46.75);
		vertex(-59.675, -29.15);
		vertex(-53.475, -29.25);
		vertex(-37.075, -54.85);
		vertex(-34.875, -53.65);
		vertex(-51.575, -27.5);
		vertex(-58.825, -27.4);
		vertex(-59.675, -29.15);
		endShape();
		beginShape();
		vertex(-27.025, -55);
		vertex(-24.825, -53.8);
		vertex(-30.625, -44.5);
		vertex(-40.525, -29.2);
		vertex(-41.525, -27.65);
		vertex(-48.775, -27.55);
		vertex(-49.625, -29.3);
		vertex(-43.425, -29.4);
		vertex(-27.025, -55);
		endShape();
		beginShape();
		vertex(-17.925, -54.95);
		vertex(-15.725, -53.75);
		vertex(-32.425, -27.6);
		vertex(-39.675, -27.5);
		vertex(-40.525, -29.2);
		vertex(-34.325, -29.3);
		vertex(-17.925, -54.95);
		endShape();
		beginShape();
		vertex(-21.975, -28.8);
		vertex(-22.975, -27.25);
		vertex(-30.225, -27.1);
		vertex(-31.075, -28.85);
		vertex(-24.875, -28.95);
		vertex(-8.475, -54.6);
		vertex(-6.275, -53.35);
		vertex(-10.575, -46.4);
		vertex(-21.975, -28.8);
		vertex(-15.775, -28.9);
		vertex(0.625, -54.5);
		vertex(2.825, -53.3);
		vertex(-13.875, -27.15);
		vertex(-21.125, -27.05);
		vertex(-21.975, -28.8);
		endShape();
		beginShape();
		vertex(10.675, -54.65);
		vertex(12.875, -53.45);
		vertex(7.075, -44.15);
		vertex(-2.825, -28.85);
		vertex(-3.825, -27.3);
		vertex(-11.075, -27.2);
		vertex(-11.925, -28.95);
		vertex(-5.725, -29);
		vertex(10.675, -54.65);
		endShape();
		beginShape();
		vertex(19.775, -54.6);
		vertex(21.975, -53.35);
		vertex(5.275, -27.25);
		vertex(-1.975, -27.15);
		vertex(-2.825, -28.85);
		vertex(3.375, -28.95);
		vertex(19.775, -54.6);
		endShape();
		beginShape();
		vertex(15.875, -28.95);
		vertex(14.875, -27.35);
		vertex(7.625, -27.25);
		vertex(6.775, -29);
		vertex(12.975, -29.1);
		vertex(29.375, -54.7);
		vertex(29.375, -54.75);
		vertex(31.575, -53.5);
		vertex(27.275, -46.55);
		vertex(15.875, -28.95);
		vertex(22.075, -29.05);
		vertex(38.475, -54.65);
		vertex(40.675, -53.45);
		vertex(23.975, -27.3);
		vertex(16.725, -27.2);
		vertex(15.875, -28.95);
		endShape();
		beginShape();
		vertex(25.925, -29.1);
		vertex(32.125, -29.15);
		vertex(48.475, -54.7);
		vertex(48.525, -54.8);
		vertex(50.725, -53.6);
		vertex(44.925, -44.3);
		vertex(35.025, -29);
		vertex(34.025, -27.45);
		vertex(26.775, -27.35);
		vertex(25.925, -29.1);
		endShape();
		beginShape();
		vertex(57.625, -54.75);
		vertex(59.825, -53.5);
		vertex(43.125, -27.4);
		vertex(35.875, -27.3);
		vertex(35.025, -29);
		vertex(41.225, -29.1);
		vertex(57.625, -54.7);
		vertex(57.625, -54.75);
		endShape();
		beginShape();
		vertex(53.575, -28.6);
		vertex(52.575, -27);
		vertex(45.325, -26.9);
		vertex(44.475, -28.65);
		vertex(50.675, -28.75);
		vertex(67.075, -54.4);
		vertex(69.275, -53.15);
		vertex(63.475, -43.85);
		vertex(53.575, -28.6);
		vertex(59.775, -28.65);
		vertex(76.175, -54.3);
		vertex(78.375, -53.1);
		vertex(61.675, -26.95);
		vertex(54.425, -26.85);
		vertex(53.575, -28.6);
		endShape();
		if(health>=11)
			fill(215, 126, 76);
		else fill(86, 86, 86);
		beginShape();
		vertex(48.525, -54.8);
		vertex(48.475, -54.7);
		vertex(32.125, -29.15);
		vertex(25.925, -29.1);
		vertex(42.575, -54.7);
		vertex(42.625, -54.8);
		vertex(48.525, -54.8);
		endShape();
		if(health>=10)
			fill(215, 126, 76);
		else fill(86, 86, 86);
		beginShape();
		vertex(15.875, -28.95);
		vertex(27.275, -46.55);
		vertex(32.575, -54.7);
		vertex(38.475, -54.65);
		vertex(22.075, -29.05);
		vertex(15.875, -28.95);
		endShape();
		if(health>=9)
			fill(243, 41, 97);
		else fill(86, 86, 86);
		beginShape();
		vertex(29.375, -54.75);
		vertex(29.375, -54.7);
		vertex(12.975, -29.1);
		vertex(6.775, -29);
		vertex(23.475, -54.7);
		vertex(23.475, -54.75);
		vertex(29.375, -54.75);
		endShape();
		if(health>=8)
			fill(243, 41, 97);
		else fill(86, 86, 86);
		beginShape();
		vertex(-2.825, -28.85);
		vertex(7.075, -44.15);
		vertex(13.875, -54.6);
		vertex(19.775, -54.6);
		vertex(3.375, -28.95);
		vertex(-2.825, -28.85);
		endShape();
		if(health>=7)
			fill(243, 41, 97);
		else fill(86, 86, 86);
		beginShape();
		vertex(10.675, -54.65);
		vertex(-5.725, -29);
		vertex(-11.925, -28.95);
		vertex(4.775, -54.7);
		vertex(10.675, -54.65);
		endShape();
		if(health>=6)
			fill(243, 41, 97);
		else fill(86, 86, 86);
		beginShape();
		vertex(-21.975, -28.8);
		vertex(-10.575, -46.4);
		vertex(-5.275, -54.55);
		vertex(0.625, -54.5);
		vertex(-15.775, -28.9);
		vertex(-21.975, -28.8);
		endShape();
		if(health>=5)
			fill(243, 41, 97);
		else fill(86, 86, 86);
		beginShape();
		vertex(-8.475, -54.6);
		vertex(-24.875, -28.95);
		vertex(-31.075, -28.85);
		vertex(-14.375, -54.6);
		vertex(-8.475, -54.6);
		endShape();
		if(health>=4)
			fill(243, 41, 97);
		else fill(86, 86, 86);
		beginShape();
		vertex(-30.625, -44.5);
		vertex(-23.825, -54.95);
		vertex(-17.925, -54.95);
		vertex(-34.325, -29.3);
		vertex(-40.525, -29.2);
		vertex(-30.625, -44.5);
		endShape();
		if(health>=3)
			fill(243, 41, 97);
		else fill(86, 86, 86);
		beginShape();
		vertex(-49.625, -29.3);
		vertex(-32.925, -55.05);
		vertex(-27.025, -55);
		vertex(-43.425, -29.4);
		vertex(-49.625, -29.3);
		endShape();
		if(health>=2)
			fill(243, 41, 97);
		else fill(86, 86, 86);
		beginShape();
		vertex(-59.675, -29.15);
		vertex(-48.275, -46.75);
		vertex(-42.975, -54.9);
		vertex(-37.075, -54.85);
		vertex(-53.475, -29.25);
		vertex(-59.675, -29.15);
		endShape();
		if(health>=1)
			fill(243, 41, 97);
		else fill(86, 86, 86);
		beginShape();
		vertex(-46.175, -54.95);
		vertex(-62.575, -29.3);
		vertex(-68.775, -29.2);
		vertex(-52.075, -54.95);
		vertex(-46.175, -54.95);
		endShape();
	pop();
}